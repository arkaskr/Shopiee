{"ast":null,"code":"var _jsxFileName = \"/home/arka/Documents/React/Shopiee/frontend/src/Context/ShopContext.jsx\",\n  _s = $RefreshSig$();\nimport { createContext, useState } from \"react\";\nimport { products } from \"../Assets/frontend_assets/assets\";\nimport { toast } from \"react-toastify\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ShopContext = /*#__PURE__*/createContext();\nconst ShopContextProvider = props => {\n  _s();\n  const currency = '₹';\n  const delivery_fee = 10;\n  const [search, setSearch] = useState('');\n  const [showSearch, setShowSearch] = useState(false);\n  const [cartItems, setCartItems] = useState({});\n  const navigate = useNavigate();\n  const addToCart = async (itemId, size) => {\n    if (!size) {\n      toast.error('Select Product Size', {\n        autoClose: 1100\n      });\n      return;\n    }\n    toast.success('Added to Cart', {\n      autoClose: 1100\n    });\n    let cartData = structuredClone(cartItems);\n    if (cartData[itemId]) {\n      if (cartData[itemId][size]) {\n        cartData[itemId][size] += 1;\n      } else {\n        cartData[itemId][size] = 1;\n      }\n    } else {\n      cartData[itemId] = {};\n      cartData[itemId][size] = 1;\n    }\n    setCartItems(cartData);\n  };\n  const getCartCount = () => {\n    let totalCount = 0;\n    for (const items in cartItems) {\n      for (const item in cartItems[items]) {\n        try {\n          if (cartItems[items][item] > 0) {\n            totalCount += cartItems[items][item];\n          }\n        } catch (error) {}\n      }\n    }\n    return totalCount;\n  };\n  const updateQuantity = async (itemId, size, quantity) => {\n    if (quantity === 0) {\n      toast.warn('Item Removed', {\n        autoClose: 1100\n      });\n    }\n    let cartData = structuredClone(cartItems);\n    cartData[itemId][size] = quantity;\n    setCartItems(cartData);\n  };\n  const getCartAmount = () => {\n    let totalAmount = 0;\n    for (const items in cartItems) {\n      let itemInfo = products.find(product => product._id === items);\n      for (const item in cartItems[items]) {\n        try {\n          if (cartItems[items][item] > 0) {\n            totalAmount += itemInfo.price * cartItems[items][item];\n          }\n        } catch (error) {}\n      }\n    }\n    return totalAmount;\n  };\n  const value = {\n    products,\n    currency,\n    delivery_fee,\n    search,\n    setSearch,\n    showSearch,\n    setShowSearch,\n    cartItems,\n    addToCart,\n    getCartCount,\n    updateQuantity,\n    getCartAmount,\n    navigate\n  };\n  return /*#__PURE__*/_jsxDEV(ShopContext.Provider, {\n    value: value,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 9\n  }, this);\n};\n_s(ShopContextProvider, \"/RRPVp1LJHSK89st4FjOq8ccZVY=\", false, function () {\n  return [useNavigate];\n});\n_c = ShopContextProvider;\nexport default ShopContextProvider;\nvar _c;\n$RefreshReg$(_c, \"ShopContextProvider\");","map":{"version":3,"names":["createContext","useState","products","toast","useNavigate","jsxDEV","_jsxDEV","ShopContext","ShopContextProvider","props","_s","currency","delivery_fee","search","setSearch","showSearch","setShowSearch","cartItems","setCartItems","navigate","addToCart","itemId","size","error","autoClose","success","cartData","structuredClone","getCartCount","totalCount","items","item","updateQuantity","quantity","warn","getCartAmount","totalAmount","itemInfo","find","product","_id","price","value","Provider","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/arka/Documents/React/Shopiee/frontend/src/Context/ShopContext.jsx"],"sourcesContent":["import { createContext, useState } from \"react\";\nimport { products } from \"../Assets/frontend_assets/assets\";\nimport { toast } from \"react-toastify\";\nimport { useNavigate } from \"react-router-dom\";\n\n\nexport const ShopContext = createContext();\n\nconst ShopContextProvider = (props) => {\n\n    const currency = '₹';\n    const delivery_fee = 10;\n    const [search, setSearch] = useState('');\n    const [showSearch, setShowSearch] = useState(false);\n    const [cartItems, setCartItems] = useState({});\n    const navigate=useNavigate();\n\n    const addToCart = async (itemId, size) => {\n\n        if (!size) {\n            toast.error('Select Product Size', { autoClose: 1100 });\n            return;\n        }\n\n        toast.success('Added to Cart', { autoClose: 1100 });\n\n        let cartData = structuredClone(cartItems);\n\n        if (cartData[itemId]) {\n            if (cartData[itemId][size]) {\n                cartData[itemId][size] += 1;\n            }\n            else {\n                cartData[itemId][size] = 1;\n            }\n        }\n        else {\n            cartData[itemId] = {};\n            cartData[itemId][size] = 1;\n        }\n        setCartItems(cartData);\n    }\n\n    const getCartCount = () => {\n        let totalCount = 0;\n        for (const items in cartItems) {\n            for (const item in cartItems[items]) {\n                try {\n                    if (cartItems[items][item] > 0) {\n                        totalCount += cartItems[items][item];\n                    }\n                } catch (error) {\n\n                }\n            }\n        }\n        return totalCount;\n    }\n\n    const updateQuantity = async (itemId, size, quantity) => {\n\n        if (quantity === 0) {\n            toast.warn('Item Removed', { autoClose: 1100 })\n        }\n\n        let cartData = structuredClone(cartItems);\n\n        cartData[itemId][size] = quantity;\n\n        setCartItems(cartData);\n\n    }\n\n    const getCartAmount =() => {\n        let totalAmount = 0;\n        for (const items in cartItems) {\n            let itemInfo = products.find((product) => product._id === items);\n            for (const item in cartItems[items]) {\n                try {\n                    if (cartItems[items][item] > 0) {\n                        totalAmount += itemInfo.price * cartItems[items][item];\n                    }\n                } catch (error) {\n\n                }\n            }\n        }\n        return totalAmount;\n    }\n\n    const value = {\n        products, currency, delivery_fee,\n        search, setSearch, showSearch, setShowSearch,\n        cartItems, addToCart, getCartCount, updateQuantity,getCartAmount,\n        navigate\n    }\n\n\n    return (\n        <ShopContext.Provider value={value}>\n            {props.children}\n        </ShopContext.Provider>\n    )\n}\n\nexport default ShopContextProvider;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}